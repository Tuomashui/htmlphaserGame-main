{"mappings":"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","sources":["scenes/playGamescene.js"],"sourcesContent":["class PlayGame extends Phaser.Scene {\r\n    constructor(){\r\n        super(PlayGame);\r\n        this.score = 0;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"brick\", './assets/brick.png');\r\n        this.load.image(\"pinecone\", './assets/realpinecone.png')\r\n        this.load.image(\"vacuum\", './assets/Vacuum.png')\r\n        this.load.spritesheet(\"centipede\", './assets/centipedetwo.png',\r\n        {frameWidth: 100, frameHeight: 100})\r\n        \r\n    }\r\n    create() {\r\n\r\n        //BRICK-CODES\r\n        this.brickGroup = this.physics.add.group({\r\n            immovable: true,\r\n            allowGravity: false\r\n        })\r\n            //setting the right starting properties for walls\r\n        let x = 500;\r\n        let y = 5;\r\n        let a = 500;\r\n        let b = 5;\r\n        for(let side = 0; side < 4; side++){\r\n\r\n            if(side <= 1){\r\n                let brick = this.brickGroup.create(x,y,\"brick\")\r\n                    brick.displayWidth = 1000; \r\n                    brick.displayHeight = 20;\r\n                    brick.body.setSize(brick.displayWidth, brick.displayHeight);\r\n                    y = 990;\r\n                \r\n            }else{\r\n                console.log(\"hello\")\r\n                let brick = this.brickGroup.create(b,a,\"brick\")\r\n                brick.displayWidth = 20; \r\n                brick.displayHeight = 1000;\r\n                brick.body.setSize(brick.displayWidth, brick.displayHeight);\r\n                b = 995;\r\n            }\r\n        }\r\n\r\n            \r\n        for(let i = 0; i < 26; i++){\r\n            let brick = this.brickGroup.create(Phaser.Math.Between(0, game.config.width), Phaser.Math.Between(0, game.config.height)\r\n                , \"brick\")\r\n                \r\n            if(i < 13){\r\n                    brick.displayWidth = 200; \r\n                    brick.displayHeight = 20;\r\n                    brick.body.setSize(brick.displayWidth, brick.displayHeight);\r\n                \r\n            }else{\r\n                brick.displayWidth = 20; \r\n                brick.displayHeight = 200;\r\n                brick.body.setSize(brick.displayWidth, brick.displayHeight);\r\n\r\n            }\r\n        }\r\n        \r\n\r\n        //CENTIPEDE-CODES\r\n        this.centipede = this.physics.add.sprite(game.config.width / 2, game.config.height / 2, \"centipede\");\r\n        this.centipede.body.setSize(50, 5);\r\n        this.physics.add.collider(this.centipede, this.brickGroup);\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n\r\n        //PINECONE-CODES\r\n        this.pineconeGroup = this.physics.add.group({});\r\n        this.physics.add.collider(this.pineconeGroup, this.brickGroup);\r\n        this.physics.add.overlap(this.centipede, this.pineconeGroup, this.collectCone, null, this);\r\n        this.add.image(30,30, \"pinecone\").setScale(0.20,0.20);\r\n        this.scoreText = this.add.text(50, 20, \"0\", {fontSize: \"30px\", fill: \"#ffffff\"}, {fontFamily: \"comic-sans\"} )\r\n        \r\n        for(let i = 0; i < 10; i++){\r\n        let pinecone = this.pineconeGroup.create(Phaser.Math.Between(0, game.config.height), Phaser.Math.Between(0, game.config.height), \"pinecone\");\r\n        pinecone.displayWidth = 20;\r\n        pinecone.displayHeight = 20;\r\n        pinecone.body.setSize(50,50);\r\n        }\r\n\r\n        //VACUUM-CODES\r\n        this.vacuumGroup = this.physics.add.group({\r\n            immovable: false,\r\n            allowGravity: true,\r\n            vacuumSpeed: 150\r\n        })\r\n        for(let i = 0; i < 10; i++){\r\n            this.createRandomVacuum();\r\n\r\n    }\r\n}\r\n\r\n\r\n    collectCone(centipede, start){\r\n        start.disableBody(true, true);\r\n        this.score++;\r\n        this.scoreText.setText(\"=\"+this.score);\r\n    }\r\n        //VACUUM\r\n        createRandomVacuum() {\r\n            const direction = Phaser.Math.Between(0, 3); \r\n            const vacuum = this.vacuumGroup.create(Phaser.Math.Between(100, game.config.width - 100), Phaser.Math.Between(100, game.config.height - 100), 'vacuum');\r\n            vacuum.displayWidth = 100;\r\n            vacuum.displayHeight = 100;\r\n            vacuum.body.setSize(105,105);\r\n            this.physics.add.collider(this.vacuumGroup, this.brickGroup);\r\n            \r\n            \r\n            switch (direction) {\r\n                case 0:\r\n                    vacuum.setVelocity(0, -200);\r\n                    break;\r\n                case 1:\r\n                    vacuum.setVelocity(0, 200); \r\n                    break;\r\n                case 2:\r\n                    vacuum.setVelocity(-200, 0); \r\n                    break;\r\n                case 3:\r\n                    vacuum.setVelocity(200, 0); \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.physics.add.collider(this.vacuumGroup, this.brickGroup);\r\n        }\r\n\r\n    update() {\r\n        if(this.physics.add.collider(this.vacuumGroup, this.brickGroup, true)){\r\n            this.vacuumGroup.children.iterate((vacuum) => {\r\n                const direction = Phaser.Math.Between(0, 1000); \r\n                switch (direction) {\r\n                    case 0:\r\n                        vacuum.setVelocity(0, -100); \r\n                        break;\r\n                    case 1:\r\n                        vacuum.setVelocity(0, 100); \r\n                        break;\r\n                    case 2:\r\n                        vacuum.setVelocity(-100, 0); \r\n                        break;\r\n                    case 3:\r\n                        vacuum.setVelocity(100, 0); \r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n        });\r\n\r\n    }\r\n\r\n        \r\n        if(this.cursors.left.isDown){\r\n            this.centipede.body.velocity.x =  -gameOptions.centipedeSpeed;\r\n            this.centipede.angle = -180;\r\n            this.centipede.body.angle = -Phaser.Math.pi;\r\n        }\r\n        else if(this.cursors.right.isDown){\r\n            this.centipede.body.velocity.x =  gameOptions.centipedeSpeed;\r\n            this.centipede.angle = 0;\r\n            this.centipede.body.angle = 0;\r\n        }\r\n        else if(this.cursors.up.isDown){\r\n            this.centipede.body.velocity.y =  -gameOptions.centipedeSpeed;\r\n            this.centipede.angle = -90;\r\n            this.centipede.body.angle = -Phaser.Math.pi;\r\n        }\r\n        else if(this.cursors.down.isDown){\r\n            this.centipede.body.velocity.y =  gameOptions.centipedeSpeed;\r\n            this.centipede.angle = 90;\r\n            this.centipede.body.angle = Phaser.Math.pi/2;\r\n        }\r\n        else{\r\n            this.centipede.body.velocity.x = 0;\r\n            this.centipede.body.velocity.y =  0;\r\n        }\r\n\r\n    \r\n}\r\n}"],"names":[],"version":3,"file":"index.9d5eccb6.js.map","sourceRoot":"/__parcel_source_root/"}